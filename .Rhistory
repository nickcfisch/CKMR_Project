boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
#Relative error for point estimates
RE_ssb_N1000_NoIndex_ckmrmultinom10<-re_SSB
RE_R0_N1000_NoIndex_ckmrmultinom10<-re_R0
RE_M_N1000_NoIndex_ckmrmultinom10<-re_M
#SD of relative error for point estimates
sd_RE_ssb_N1000_NoIndex_ckmrmultinom10<-apply(re_SSB,c(1,3),sd, na.rm=TRUE)
sd_RE_R0_N1000_NoIndex_ckmrmultinom10<-apply(re_R0,2,sd, na.rm=TRUE)
sd_RE_M_N1000_NoIndex_ckmrmultinom10<-apply(re_M,2,sd, na.rm=TRUE)
#SD of absolute relative error
sd_ARE_ssb_N1000_NoIndex_ckmrmultinom10<-apply(abs(re_SSB),c(1,3),sd, na.rm=TRUE)
sd_ARE_R0_N1000_NoIndex_ckmrmultinom10<-apply(abs(re_R0),2,sd, na.rm=TRUE)
sd_ARE_M_N1000_NoIndex_ckmrmultinom10<-apply(abs(re_M),2,sd, na.rm=TRUE)
#Precision within sims
SD_ssb_N1000_NoIndex_ckmrmultinom10<-CV_ssb_N1000_NoIndex_ckmrmultinom10<-array(NA, dim=c(3,100,76))
SD_R0_N1000_NoIndex_ckmrmultinom10<-matrix(NA, nrow=3, ncol=100)
SD_M_N1000_NoIndex_ckmrmultinom10<-matrix(NA, nrow=3, ncol=100)
for(f in 1:3){
for (i in 1:100){
CV_ssb_N1000_NoIndex_ckmrmultinom10[f,i,]<-res_list[[f]][[i]]$SD$sd/res_list[[f]][[i]]$SD$unbiased$value
SD_ssb_N1000_NoIndex_ckmrmultinom10[f,i,]<-res_list[[f]][[i]]$SD$sd
SD_R0_N1000_NoIndex_ckmrmultinom10[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_R0","log_R0"])
SD_M_N1000_NoIndex_ckmrmultinom10[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_M","log_M"])
}
}
#N5000, 10yrs CKMR data, No Index
res_list<-list()
res_list[[1]]<-readRDS(paste0(wd,"/SCAAfit_Cod_N5000_NoIndex_ckmrmultinom10.RData"))
res_list[[2]]<-readRDS(paste0(wd,"/SCAAfit_Flatfish_N5000_NoIndex_ckmrmultinom10.RData"))
res_list[[3]]<-readRDS(paste0(wd,"/SCAAfit_Sardine_N5000_NoIndex_ckmrmultinom10.RData"))
load(paste0(wd,"/Cod_wdat_N5000_Ind25_ckmrmultinom10_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N5000_Ind25_ckmrmultinom10_1.RData"))
load(paste0(wd,"/Sardine_wdat_N5000_Ind25_ckmrmultinom10_1.RData"))
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
#SSB
par(mfrow=c(3,3))
boxplot(re_SSB[1,,], ylim=c(-0.25,0.25), las=1, main="Cod - N5000, No Index, CKMR 10yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.25,0.25), las=1, main="Flatfish - N5000, No Index, CKMR 10yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.25,0.25), las=1, main="Sardine - N5000, No Index, CKMR 10yrs", ylab="RE - SSB")
abline(h=0)
#R0
boxplot(re_R0[,1], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
#M
boxplot(re_M[,1], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
#Relative error for point estimates
RE_ssb_N5000_NoIndex_ckmrmultinom10<-re_SSB
RE_R0_N5000_NoIndex_ckmrmultinom10<-re_R0
RE_M_N5000_NoIndex_ckmrmultinom10<-re_M
#SD of relative error for point estimates
sd_RE_ssb_N5000_NoIndex_ckmrmultinom10<-apply(re_SSB[,-c(1:2),],c(1,3),sd, na.rm=TRUE)
sd_RE_R0_N5000_NoIndex_ckmrmultinom10<-apply(re_R0[-c(1:2),],2,sd, na.rm=TRUE)
sd_RE_M_N5000_NoIndex_ckmrmultinom10<-apply(re_M[-c(1:2),],2,sd, na.rm=TRUE)
#SD of absolute relative error
sd_ARE_ssb_N5000_NoIndex_ckmrmultinom10<-apply(abs(re_SSB),c(1,3),sd, na.rm=TRUE)
sd_ARE_R0_N5000_NoIndex_ckmrmultinom10<-apply(abs(re_R0),2,sd, na.rm=TRUE)
sd_ARE_M_N5000_NoIndex_ckmrmultinom10<-apply(abs(re_M),2,sd, na.rm=TRUE)
#Precision within sims
SD_ssb_N5000_NoIndex_ckmrmultinom10<-CV_ssb_N5000_NoIndex_ckmrmultinom10<-array(NA, dim=c(3,100,76))
SD_R0_N5000_NoIndex_ckmrmultinom10<-matrix(NA, nrow=3, ncol=100)
SD_M_N5000_NoIndex_ckmrmultinom10<-matrix(NA, nrow=3, ncol=100)
for(f in 1:3){
for (i in 1:100){
if (!is.null(res_list[[f]][[i]])){
CV_ssb_N5000_NoIndex_ckmrmultinom10[f,i,]<-res_list[[f]][[i]]$SD$sd/res_list[[f]][[i]]$SD$unbiased$value
SD_ssb_N5000_NoIndex_ckmrmultinom10[f,i,]<-res_list[[f]][[i]]$SD$sd
SD_R0_N5000_NoIndex_ckmrmultinom10[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_R0","log_R0"])
SD_M_N5000_NoIndex_ckmrmultinom10[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_M","log_M"])
}
}
}
#N100, 20yrs CKMR data, No Index
res_list<-list()
res_list[[1]]<-readRDS(paste0(wd,"/SCAAfit_Cod_N100_NoIndex_ckmrmultinom20.RData"))
res_list[[2]]<-readRDS(paste0(wd,"/SCAAfit_Flatfish_N100_NoIndex_ckmrmultinom20.RData"))
res_list[[3]]<-readRDS(paste0(wd,"/SCAAfit_Sardine_N100_NoIndex_ckmrmultinom20.RData"))
load(paste0(wd,"/Cod_wdat_N100_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N100_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Sardine_wdat_N100_Ind25_ckmrmultinom20_1.RData"))
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}else if (f==2){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
} else if (f==3){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
#SSB
par(mfrow=c(3,3))
boxplot(re_SSB[1,,], ylim=c(-0.25,0.25), las=1, main="Cod - N100, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.25,0.25), las=1, main="Flatfish - N100, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.25,0.25), las=1, main="Sardine - N100, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
#R0
boxplot(re_R0[,1], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
#M
boxplot(re_M[,1], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
#Relative error for point estimates
RE_ssb_N100_NoIndex_ckmrmultinom20<-re_SSB
RE_R0_N100_NoIndex_ckmrmultinom20<-re_R0
RE_M_N100_NoIndex_ckmrmultinom20<-re_M
#SD of relative error for point estimates
sd_RE_ssb_N100_NoIndex_ckmrmultinom20<-apply(re_SSB,c(1,3),sd, na.rm=TRUE)
sd_RE_R0_N100_NoIndex_ckmrmultinom20<-apply(re_R0,2,sd, na.rm=TRUE)
sd_RE_M_N100_NoIndex_ckmrmultinom20<-apply(re_M,2,sd, na.rm=TRUE)
#SD of absolute relative error
sd_ARE_ssb_N100_NoIndex_ckmrmultinom20<-apply(abs(re_SSB),c(1,3),sd, na.rm=TRUE)
sd_ARE_R0_N100_NoIndex_ckmrmultinom20<-apply(abs(re_R0),2,sd, na.rm=TRUE)
sd_ARE_M_N100_NoIndex_ckmrmultinom20<-apply(abs(re_M),2,sd, na.rm=TRUE)
#Precision within sims
SD_ssb_N100_NoIndex_ckmrmultinom20<-CV_ssb_N100_NoIndex_ckmrmultinom20<-array(NA, dim=c(3,100,76))
SD_R0_N100_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
SD_M_N100_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
for(f in 1:3){
for (i in 1:100){
CV_ssb_N100_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd/res_list[[f]][[i]]$SD$unbiased$value
SD_ssb_N100_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd
SD_R0_N100_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_R0","log_R0"])
SD_M_N100_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_M","log_M"])
}
}
#N1000, 20yrs CKMR data, No Index
res_list<-list()
res_list[[1]]<-readRDS(paste0(wd,"/SCAAfit_Cod_N1000_NoIndex_ckmrmultinom20.RData"))
res_list[[2]]<-readRDS(paste0(wd,"/SCAAfit_Flatfish_N1000_NoIndex_ckmrmultinom20.RData"))
res_list[[3]]<-readRDS(paste0(wd,"/SCAAfit_Sardine_N1000_NoIndex_ckmrmultinom20.RData"))
load(paste0(wd,"/Cod_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Sardine_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}else if (f==2){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
} else if (f==3){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
#SSB
par(mfrow=c(3,3))
boxplot(re_SSB[1,,], ylim=c(-0.25,0.25), las=1, main="Cod - N1000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.25,0.25), las=1, main="Flatfish - N1000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.25,0.25), las=1, main="Sardine - N1000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
#R0
boxplot(re_R0[,1], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
#M
boxplot(re_M[,1], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
#Relative error for point estimates
RE_ssb_N1000_NoIndex_ckmrmultinom20<-re_SSB
RE_R0_N1000_NoIndex_ckmrmultinom20<-re_R0
RE_M_N1000_NoIndex_ckmrmultinom20<-re_M
#SD of relative error for point estimates
sd_RE_ssb_N1000_NoIndex_ckmrmultinom20<-apply(re_SSB,c(1,3),sd, na.rm=TRUE)
sd_RE_R0_N1000_NoIndex_ckmrmultinom20<-apply(re_R0,2,sd, na.rm=TRUE)
sd_RE_M_N1000_NoIndex_ckmrmultinom20<-apply(re_M,2,sd, na.rm=TRUE)
#SD of absolute relative error
sd_ARE_ssb_N1000_NoIndex_ckmrmultinom20<-apply(abs(re_SSB),c(1,3),sd, na.rm=TRUE)
sd_ARE_R0_N1000_NoIndex_ckmrmultinom20<-apply(abs(re_R0),2,sd, na.rm=TRUE)
sd_ARE_M_N1000_NoIndex_ckmrmultinom20<-apply(abs(re_M),2,sd, na.rm=TRUE)
#Precision within sims
SD_ssb_N1000_NoIndex_ckmrmultinom20<-CV_ssb_N1000_NoIndex_ckmrmultinom20<-array(NA, dim=c(3,100,76))
SD_R0_N1000_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
SD_M_N1000_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
for(f in 1:3){
for (i in 1:100){
CV_ssb_N1000_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd/res_list[[f]][[i]]$SD$unbiased$value
SD_ssb_N1000_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd
SD_R0_N1000_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_R0","log_R0"])
SD_M_N1000_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_M","log_M"])
}
}
#N5000, 20yrs CKMR data, No Index
res_list<-list()
res_list[[1]]<-readRDS(paste0(wd,"/SCAAfit_Cod_N5000_NoIndex_ckmrmultinom20.RData"))
res_list[[2]]<-readRDS(paste0(wd,"/SCAAfit_Flatfish_N5000_NoIndex_ckmrmultinom20.RData"))
res_list[[3]]<-readRDS(paste0(wd,"/SCAAfit_Sardine_N5000_NoIndex_ckmrmultinom20.RData"))
load(paste0(wd,"/Cod_wdat_N5000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N5000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Sardine_wdat_N5000_Ind25_ckmrmultinom20_1.RData"))
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if (!is.null(res_list[[f]][[i]])){
re_SSB[f,i,]<-(res_list[[f]][[i]]$SD$unbiased$value-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
#re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[2])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(res_list[[f]][[i]]$SD$par.fixed[1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
#SSB
par(mfrow=c(3,3))
boxplot(re_SSB[1,,], ylim=c(-0.25,0.25), las=1, main="Cod - N5000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.25,0.25), las=1, main="Flatfish - N5000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.25,0.25), las=1, main="Sardine - N5000, No Index, CKMR 20yrs", ylab="RE - SSB")
abline(h=0)
#R0
boxplot(re_R0[,1], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.25,0.25), las=1, main="", ylab="RE - R0")
abline(h=0)
#M
boxplot(re_M[,1], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="", ylab="RE - M")
abline(h=0)
#Relative error for point estimates
RE_ssb_N5000_NoIndex_ckmrmultinom20<-re_SSB
RE_R0_N5000_NoIndex_ckmrmultinom20<-re_R0
RE_M_N5000_NoIndex_ckmrmultinom20<-re_M
#SD of relative error for point estimates
sd_RE_ssb_N5000_NoIndex_ckmrmultinom20<-apply(re_SSB,c(1,3),sd, na.rm=TRUE)
sd_RE_R0_N5000_NoIndex_ckmrmultinom20<-apply(re_R0,2,sd, na.rm=TRUE)
sd_RE_M_N5000_NoIndex_ckmrmultinom20<-apply(re_M,2,sd, na.rm=TRUE)
#SD of absolute relative error
sd_ARE_ssb_N5000_NoIndex_ckmrmultinom20<-apply(abs(re_SSB),c(1,3),sd, na.rm=TRUE)
sd_ARE_R0_N5000_NoIndex_ckmrmultinom20<-apply(abs(re_R0),2,sd, na.rm=TRUE)
sd_ARE_M_N5000_NoIndex_ckmrmultinom20<-apply(abs(re_M),2,sd, na.rm=TRUE)
#Precision within sims
SD_ssb_N5000_NoIndex_ckmrmultinom20<-CV_ssb_N5000_NoIndex_ckmrmultinom20<-array(NA, dim=c(3,100,76))
SD_R0_N5000_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
SD_M_N5000_NoIndex_ckmrmultinom20<-matrix(NA, nrow=3, ncol=100)
for(f in 1:3){
for (i in 1:100){
if (!is.null(res_list[[f]][[i]])){
CV_ssb_N5000_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd/res_list[[f]][[i]]$SD$unbiased$value
SD_ssb_N5000_NoIndex_ckmrmultinom20[f,i,]<-res_list[[f]][[i]]$SD$sd
SD_R0_N5000_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_R0","log_R0"])
SD_M_N5000_NoIndex_ckmrmultinom20[f,i]<-sqrt(res_list[[f]][[i]]$SD$cov.fixed["log_M","log_M"])
}
}
}
par(mfrow=c(3,3), mar=c(3,4,1,1), oma=c(2,2,1,1))
boxplot(CV_ssb_N100_Ind50_ckmrmultinom5[1,,]/CV_ssb_N100_Ind50_5yrs_noCKMR[1,,], ylim=c(0.98,1.02), las=1, main="Cod - N100", col=2)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom10[1,,]/CV_ssb_N100_Ind50_10yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom20[1,,]/CV_ssb_N100_Ind50_20yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom5[1,,]/CV_ssb_N1000_Ind50_5yrs_noCKMR[1,,], ylim=c(0.985,1.01), las=1, main="Index - 0.5, Cod - N1000", col=2)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom10[1,,]/CV_ssb_N1000_Ind50_10yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom20[1,,]/CV_ssb_N1000_Ind50_20yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=4)
legend("top",c("5yrs CKMR", "10yrs CKMR", "20yrs CKMR"), pch=15, col=c(2,3,4))
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom5[1,,]/CV_ssb_N5000_Ind50_5yrs_noCKMR[1,,], ylim=c(0.875,1.02), las=1, main="Cod - N5000", col=2)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom10[1,,]/CV_ssb_N5000_Ind50_10yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom20[1,,]/CV_ssb_N5000_Ind50_20yrs_noCKMR[1,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom5[2,,]/CV_ssb_N100_Ind50_5yrs_noCKMR[2,,], ylim=c(0.925,1.05), las=1, main="Flatfish - N100", ylab="CV of SSB relative to no CKMR Model", col=2)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom10[2,,]/CV_ssb_N100_Ind50_10yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom20[2,,]/CV_ssb_N100_Ind50_20yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom5[2,,]/CV_ssb_N1000_Ind50_5yrs_noCKMR[2,,], ylim=c(0.25,1.05), las=1, main="Flatfish - N1000", col=2)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom10[2,,]/CV_ssb_N1000_Ind50_10yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom20[2,,]/CV_ssb_N1000_Ind50_20yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom5[2,,]/CV_ssb_N5000_Ind50_5yrs_noCKMR[2,,], ylim=c(0.1,1.05), las=1, main="Flatfish - N5000", col=2)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom10[2,,]/CV_ssb_N5000_Ind50_10yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom20[2,,]/CV_ssb_N5000_Ind50_20yrs_noCKMR[2,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom5[3,,]/CV_ssb_N100_Ind50_5yrs_noCKMR[3,,], ylim=c(0.98,1.02), las=1, main="Sardine - N100", col=2)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom10[3,,]/CV_ssb_N100_Ind50_10yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N100_Ind50_ckmrmultinom20[3,,]/CV_ssb_N100_Ind50_20yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom5[3,,]/CV_ssb_N1000_Ind50_5yrs_noCKMR[3,,], ylim=c(0.9,1.1), las=1, main="Sardine - N1000", col=2)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom10[3,,]/CV_ssb_N1000_Ind50_10yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N1000_Ind50_ckmrmultinom20[3,,]/CV_ssb_N1000_Ind50_20yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=4)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom5[3,,]/CV_ssb_N5000_Ind50_5yrs_noCKMR[3,,], ylim=c(0.5,1.05), las=1, main="Sardine - N5000", col=2)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom10[3,,]/CV_ssb_N5000_Ind50_10yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=3)
boxplot(CV_ssb_N5000_Ind50_ckmrmultinom20[3,,]/CV_ssb_N5000_Ind50_20yrs_noCKMR[3,,], add=TRUE, las=1, main="", col=4)
CV_ssb_N5000_Ind50_ckmrmultinom5[2,,]/CV_ssb_N5000_Ind50_5yrs_noCKMR[2,,]
CV_ssb_N5000_Ind50_ckmrmultinom5[1,,]/CV_ssb_N5000_Ind50_5yrs_noCKMR[1,,]
load(paste0(wd,"/Cod_wdat_N5000_Ind50_ckmrmultinom5_1.RData"))
Cod_OM<-Cod_wdat
#TMB Section
library(TMB)
setwd(wd)
#Compile and load model
compile("SCAA_Fisch_wAge0.cpp")
#Doing N Simulations
N_sim<-1:100
res_list<-list()
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.25,max=OM$OM$Mref+OM$OM$Mref*0.25)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.25,max=OM$q_index+OM$q_index*0.25)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.25,max=OM$OM$R0+OM$OM$R0*0.25)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.25,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.25)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.25,max=OM$OM$Sel_50+OM$OM$Sel_50*0.25)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.25,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.25)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
i
s
load(paste0(wd,"/Cod_wdat_N5000_Ind50_ckmrmultinom5_1.RData"))
Cod_OM<-Cod_wdat
#TMB Section
library(TMB)
setwd(wd)
#Compile and load model
compile("SCAA_Fisch_wAge0.cpp")
#Doing N Simulations
N_sim<-1:100
res_list<-list()
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.75,max=OM$OM$Mref+OM$OM$Mref*0.75)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.75,max=OM$q_index+OM$q_index*0.75)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.75,max=OM$OM$R0+OM$OM$R0*0.75)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.75,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.75)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.75,max=OM$OM$Sel_50+OM$OM$Sel_50*0.75)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.75,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.75)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
saveRDS(res_list[[1]], file=paste0(wd,"/SCAAfit_Cod_N5000_Ind50_5yrs_noCKMR.RData"))
