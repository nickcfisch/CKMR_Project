fyear_ckmr<-96
lyear_ckmr<-100
pi_nu<-0.736
progress_bar<-TRUE
for (s in 1:N_sim){
Cod_wdat[[s]]     <-Get_Data(OM=Cod_runs[[s]],     dat_seed=s,fyear_dat=fyear_dat,lyear_dat=lyear_dat,sd_catch=sd_catch,N_Comp_preCKMR=N_comp_preCKMR,N_Comp_CKMR=N_comp_CKMR,q_index=0.0001,sd_index=sd_index,prop_ckmr=prop_ckmr,fyear_ckmr=fyear_ckmr,lyear_ckmr=lyear_ckmr,pi_nu=pi_nu,AE_mat=AEs[[1]])
Flatfish_wdat[[s]]<-Get_Data(OM=Flatfish_runs[[s]],dat_seed=s,fyear_dat=fyear_dat,lyear_dat=lyear_dat,sd_catch=sd_catch,N_Comp_preCKMR=N_comp_preCKMR,N_Comp_CKMR=N_comp_CKMR,q_index=0.0001,sd_index=sd_index,prop_ckmr=prop_ckmr,fyear_ckmr=fyear_ckmr,lyear_ckmr=lyear_ckmr,pi_nu=pi_nu,AE_mat=AEs[[2]])
Sardine_wdat[[s]] <-Get_Data(OM=Sardine_runs[[s]], dat_seed=s,fyear_dat=fyear_dat,lyear_dat=lyear_dat,sd_catch=sd_catch,N_Comp_preCKMR=N_comp_preCKMR,N_Comp_CKMR=N_comp_CKMR,q_index=0.0001,sd_index=sd_index,prop_ckmr=prop_ckmr,fyear_ckmr=fyear_ckmr,lyear_ckmr=lyear_ckmr,pi_nu=pi_nu,AE_mat=AEs[[3]])
if(progress_bar==TRUE){
plot(rep(1,length(1:s)), pch=16)
}
}
save(Cod_wdat, file=paste0(wd,"/Cod_wdat_N5000_Ind50_ckmrmultinom5_1.RData"))
save(Flatfish_wdat, file=paste0(wd,"/Flatfish_wdat_N5000_Ind50_ckmrmultinom5_1.RData"))
save(Sardine_wdat, file=paste0(wd,"/Sardine_wdat_N5000_Ind50_ckmrmultinom5_1.RData"))
wd<-"C:/Users/fischn/Documents/GitHub/CKMR_Project/wo_AE/"
AEs<-readRDS("C:/Users/fischn/Documents/GitHub/CKMR_Project/AE_mat_list.RData")
load(paste0(wd,"/Cod_wdat_N100_Ind50_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N100_Ind50_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Sardine_wdat_N100_Ind50_ckmrmultinom20_1.RData"))
Cod_OM<-Cod_wdat
Flatfish_OM<-Flatfish_wdat
Sardine_OM<-Sardine_wdat
#TMB Section
library(TMB)
setwd(wd)
#Compile and load model
compile("SCAA_Fisch_wAge0.cpp")
N_sim<-1:1
res_list<-list()
for (Q in 3:3){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, fyear_CKMR=OM$fyear_ckmr-(OM$fyear_dat-1), lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1,
AE_mat=OM$AE_mat)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.5,max=OM$OM$Mref+OM$OM$Mref*0.5)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.5,max=OM$q_index+OM$q_index*0.5)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.5,max=OM$OM$R0+OM$OM$R0*0.5)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.5,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.5)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.5,max=OM$OM$Sel_50+OM$OM$Sel_50*0.5)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.5,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.5)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE, verbo=FALSE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
N_sim<-1:1
res_list<-list()
for (Q in 3:3){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, fyear_CKMR=OM$fyear_ckmr-(OM$fyear_dat-1), lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1,
AE_mat=OM$AE_mat)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.5,max=OM$OM$Mref+OM$OM$Mref*0.5)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.5,max=OM$q_index+OM$q_index*0.5)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.5,max=OM$OM$R0+OM$OM$R0*0.5)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.5,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.5)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.5,max=OM$OM$Sel_50+OM$OM$Sel_50*0.5)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.5,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.5)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE, silent=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
N_sim<-1:1
res_list<-list()
for (Q in 3:3){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, fyear_CKMR=OM$fyear_ckmr-(OM$fyear_dat-1), lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1,
AE_mat=OM$AE_mat)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.5,max=OM$OM$Mref+OM$OM$Mref*0.5)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.5,max=OM$q_index+OM$q_index*0.5)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.5,max=OM$OM$R0+OM$OM$R0*0.5)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.5,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.5)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.5,max=OM$OM$Sel_50+OM$OM$Sel_50*0.5)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.5,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.5)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects, silent=TRUE)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
N_sim<-1:1
res_list<-list()
for (Q in 3:3){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, fyear_CKMR=OM$fyear_ckmr-(OM$fyear_dat-1), lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1,
AE_mat=OM$AE_mat)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.5,max=OM$OM$Mref+OM$OM$Mref*0.5)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.5,max=OM$q_index+OM$q_index*0.5)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.5,max=OM$OM$R0+OM$OM$R0*0.5)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.5,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.5)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.5,max=OM$OM$Sel_50+OM$OM$Sel_50*0.5)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.5,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.5)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects, silent=TRUE)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE, silent=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
N_sim<-1:1
res_list<-list()
for (Q in 3:3){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_OM[[s]]
} else if (Q==2){
OM<-Flatfish_OM[[s]]
}else if (Q==3){
OM<-Sardine_OM[[s]]
}
dat<-list(fyear=OM$OM$fyear, fyear_CKMR=OM$fyear_ckmr-(OM$fyear_dat-1), lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa,
Lamda_Harvest=1,                           #Switch for whether to use a data source or not, 0=no, 1=yes
Lamda_Comp=1,
Lamda_Index=1,
AE_mat=OM$AE_mat)
#Parameters
set.seed(s)
par <- list(log_M=log(runif(1,min=OM$OM$Mref-OM$OM$Mref*0.5,max=OM$OM$Mref+OM$OM$Mref*0.5)),
log_q=log(runif(1,min=OM$q_index-OM$q_index*0.5,max=OM$q_index+OM$q_index*0.5)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(runif(1,min=OM$OM$R0-OM$OM$R0*0.5,max=OM$OM$R0+OM$OM$R0*0.5)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(runif(1,min=OM$OM$Sel_slope-OM$OM$Sel_slope*0.5,max=OM$OM$Sel_slope+OM$OM$Sel_slope*0.5)),
Sel_logis_midpt=log(runif(1,min=OM$OM$Sel_50-OM$OM$Sel_50*0.5,max=OM$OM$Sel_50+OM$OM$Sel_50*0.5)),
log_fint=log(runif(length(OM$OM$F_int[26:100]),min=OM$OM$F_int[26:100]-OM$OM$F_int[26:100]*0.5,max=OM$OM$F_int[26:100]+OM$OM$F_int[26:100]*0.5)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects, silent=TRUE)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps = 1,getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
print(c(Q,s))
}
}
runExample("simple", thisR = TRUE)
FreeADFun(obj)
obj$par
obj$fn()
runExample("simple", thisR = TRUE)
obj$fn()
obj$fn()
FreeADFun(obj)
obj$fn()
wd
wd<-"C:/Users/fischn/Documents/GitHub/CKMR_Project/"
AEs<-readRDS("C:/Users/fischn/Documents/GitHub/CKMR_Project/AE_mat_list.RData")
load(paste0(wd,"/Cod_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Flatfish_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
load(paste0(wd,"/Sardine_wdat_N1000_Ind25_ckmrmultinom20_1.RData"))
Cod_OM<-Cod_wdat
Flatfish_OM<-Flatfish_wdat
Sardine_OM<-Sardine_wdat
#TMB Section
library(TMB)
setwd(wd)
results<-readRDS("C:/Users/fischn/Documents/300/mcmcresults.RData")
fleet<-2
pred_array<-array(NA,dim=c(14000,length(unique(results[[1]]$agedbase[results[[1]]$agedbase$Fleet==fleet,]$Yr)),44))
ages<-list()
for (k in 1:14000){  ages[[k]]<-results[[k]]$agedbase[results[[k]]$agedbase$Fleet==fleet,]
obs<-matrix(NA,ncol=44,nrow=length(unique(ages[[k]]$Yr)))
for (i in 1:44){
for (j in 1:length(unique(ages[[k]]$Yr))){
idx<-sort(unique(ages[[k]]$Yr))
if(i %in% 1:22){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==1]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==1]
}
if(i %in% 23:44){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i-22 & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==2]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i-22 & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==2]
}
}
}}
iss<-unique(results[[1]]$agedbase$Nsamp_in[results[[1]]$agedbase$Fleet==fleet])
obs_prop<-obs
obs<-obs*iss
pred<-apply(pred_array,c(2,3),median)
windows()
plot(unique(ages[[1]]$Yr), rowSums(obs_prop*rep(1:22,2)), ylim=c(1,22), pch=16, las=1, ylab="Mean Age", xlab="Years")
points(unique(ages[[1]]$Yr), rowSums(pred*rep(1:22,2)), pch=16, col=2)
obs_prop
pred
pred[,c(22,44)]<-obs_prop[,c(22,44)]
pred/rowSums(pred)
rowSums(pred/rowSums(pred))
obs_prop<-obs
obs<-obs*iss
pred<-apply(pred_array,c(2,3),median)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
res
fleet
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
obs
obs
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res
fleet<-2
pred_array<-array(NA,dim=c(14000,length(unique(results[[1]]$agedbase[results[[1]]$agedbase$Fleet==fleet,]$Yr)),44))
ages<-list()
for (k in 1:14000){  ages[[k]]<-results[[k]]$agedbase[results[[k]]$agedbase$Fleet==fleet,]
obs<-matrix(NA,ncol=44,nrow=length(unique(ages[[k]]$Yr)))
for (i in 1:44){
for (j in 1:length(unique(ages[[k]]$Yr))){
idx<-sort(unique(ages[[k]]$Yr))
if(i %in% 1:22){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==1]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==1]
}
if(i %in% 23:44){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i-22 & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==2]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i-22 & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==2]
}
}
}}
iss<-unique(results[[1]]$agedbase$Nsamp_in[results[[1]]$agedbase$Fleet==fleet])
obs_prop<-obs
obs<-obs*iss
pred<-apply(pred_array,c(2,3),median)
set.seed(300)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[44:1]))
plot(res)
obs
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,44:1])),t(pred[,44:1]))
plot(res)
pred[,c(22,44)]
pred[,c(22,44)]<-obs_prop[,c(22,44)]
pred<-pred/rowSums(pred)
rowSums(ored)
rowSums(pred)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
par(mfrow=c(2,4), mar=c(2,2,1,1), oma=c(3,3,1,1))
for (i in 1:length(unique(ages[[1]]$Yr))){
plot(1:22,obs_prop[i,1:22], xlab="", ylab="", las=1, main=paste0(unique(ages[[1]]$Yr)[i]), type="l", lwd=2, ylim=c(-0.2,0.2))
if(i==1){legend("topleft", c("Observed","Predicted Female", "Predicted Male"), lwd=2, col=c(1,2,4), bty="n")}
legend("topright",c(paste0("N Input=",unique(results[[1]]$agedbase$Nsamp_in[results[[1]]$agedbase$Fleet==fleet])[i])), bty="n")
abline(h=0, lty=1, col="grey")
points(1:22, obs_prop[i,1:22], pch=16)
lines(1:22, -obs_prop[i,23:44], lwd=2)
points(1:22,-obs_prop[i,23:44], pch=16)
lines(1:22,  pred[i,1:22], lwd=2, col=2)
lines(1:22, -pred[i,23:44],lwd=2, col=4)
points(1:22, pred[i,1:22], pch=16, col=2)
points(1:22,-pred[i,23:44],pch=16, col=4)
}
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
iss<-unique(results[[1]]$agedbase$Nsamp_in[results[[1]]$agedbase$Fleet==fleet])
obs_prop<-obs
obs<-obs*iss
pred<-apply(pred_array,c(2,3),median)
set.seed(300)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
fleet<-2
pred_array<-array(NA,dim=c(14000,length(unique(results[[1]]$agedbase[results[[1]]$agedbase$Fleet==fleet,]$Yr)),44))
ages<-list()
for (k in 1:14000){  ages[[k]]<-results[[k]]$agedbase[results[[k]]$agedbase$Fleet==fleet,]
obs<-matrix(NA,ncol=44,nrow=length(unique(ages[[k]]$Yr)))
for (i in 1:44){
for (j in 1:length(unique(ages[[k]]$Yr))){
idx<-sort(unique(ages[[k]]$Yr))
if(i %in% 1:22){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==1]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==1]
}
if(i %in% 23:44){
obs[j,i]<-ages[[1]]$Obs[ages[[1]]$Bin==i-22 & ages[[1]]$Yr==idx[j] & ages[[1]]$Sex==2]
pred_array[k,j,i]<-ages[[k]]$Exp[ages[[k]]$Bin==i-22 & ages[[k]]$Yr==idx[j] & ages[[k]]$Sex==2]
}
}
}}
iss<-unique(results[[1]]$agedbase$Nsamp_in[results[[1]]$agedbase$Fleet==fleet])
obs_prop<-obs
obs<-obs*iss
pred<-apply(pred_array,c(2,3),median)
set.seed(300)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs)),t(pred))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))])),t(pred[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))])),t(pred[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)])),t(pred[,c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44)]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))])),t(pred[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))])),t(pred[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))]))
plot(res)
res<-compResidual::resMulti(t(round(obs[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))])),t(pred[,rev(c(1,23,2,24,3,25,4,26,5,27,6,28,7,29,8,30,9,31,10,32,11,33,12,34,13,35,14,36,15,37,16,38,17,39,18,40,19,41,20,42,21,43,22,44))]))
plot(res)
