for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_wdat[[s]]
} else if (Q==2){
OM<-Flatfish_wdat[[s]]
}else if (Q==3){
OM<-Sardine_wdat[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa)
#Parameters
par <- list(log_M=log(jitter(OM$OM$Mref, factor=jfactor)),
log_q=log(jitter(OM$q_index, factor=jfactor)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(jitter(OM$OM$R0, factor=jfactor)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=jitter(OM$OM$Sel_slope, factor=jfactor),
Sel_logis_midpt=jitter(OM$OM$Sel_50, factor=jfactor),
log_fint=log(jitter(OM$OM$F_int[26:100], factor=jfactor)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5, 0,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2,20,100,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u,newtonsteps = 1, getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
}
}
library(TMB)
setwd("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project")
#Compile and load model
compile("SCAA_Fisch_wAge0.cpp")
N_sim<-1:1
jfactor<-5
res_list<-list()
set.seed(1)
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_wdat[[s]]
} else if (Q==2){
OM<-Flatfish_wdat[[s]]
}else if (Q==3){
OM<-Sardine_wdat[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa)
#Parameters
par <- list(log_M=log(jitter(OM$OM$Mref, factor=jfactor)),
log_q=log(jitter(OM$q_index, factor=jfactor)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(jitter(OM$OM$R0, factor=jfactor)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=jitter(OM$OM$Sel_slope, factor=jfactor),
Sel_logis_midpt=jitter(OM$OM$Sel_50, factor=jfactor),
log_fint=log(jitter(OM$OM$F_int[26:100], factor=jfactor)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5, 0,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2,20,100,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u,newtonsteps = 1, getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
}
}
SCAA_fit$SD
N_sim<-1:1
jfactor<-5
res_list<-list()
set.seed(1)
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_wdat[[s]]
} else if (Q==2){
OM<-Flatfish_wdat[[s]]
}else if (Q==3){
OM<-Sardine_wdat[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa)
#Parameters
par <- list(log_M=log(jitter(OM$OM$Mref, factor=jfactor)),
log_q=log(jitter(OM$q_index, factor=jfactor)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(jitter(OM$OM$R0, factor=jfactor)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=jitter(OM$OM$Sel_slope, factor=jfactor),
Sel_logis_midpt=jitter(OM$OM$Sel_50, factor=jfactor),
log_fint=log(jitter(OM$OM$F_int[26:100], factor=jfactor)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5, 0,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2,20,100,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
res_list[[Q]][[s]]<-SCAA_fit
}
}
SCAA_fit$SD
N_sim<-1:1
jfactor<-5
res_list<-list()
set.seed(1)
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_wdat[[s]]
} else if (Q==2){
OM<-Flatfish_wdat[[s]]
}else if (Q==3){
OM<-Sardine_wdat[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa)
#Parameters
par <- list(log_M=log(jitter(OM$OM$Mref, factor=jfactor)),
log_q=log(jitter(OM$q_index, factor=jfactor)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(jitter(OM$OM$R0, factor=jfactor)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=jitter(OM$OM$Sel_slope, factor=jfactor),
Sel_logis_midpt=jitter(OM$OM$Sel_50, factor=jfactor),
log_fint=log(jitter(OM$OM$F_int[26:100], factor=jfactor)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5, 0,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2,20,100,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u,newtonsteps = 1, getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
}
}
SCAA_fit$SD
N_sim<-1:1
jfactor<-5
res_list<-list()
set.seed(1)
for (Q in 1:1){  #Running through the life history types
res_list[[Q]]<-list()
for (s in N_sim){
if(Q==1){
OM<-Cod_wdat[[s]]
} else if (Q==2){
OM<-Flatfish_wdat[[s]]
}else if (Q==3){
OM<-Sardine_wdat[[s]]
}
dat<-list(fyear=OM$OM$fyear, lyear=75, fage=OM$OM$fage, lage=OM$OM$lage,
years=OM$OM$fyear:75, ages=OM$OM$fage:OM$OM$lage,
obs_harv=OM$Obs_Catch,
obs_index=OM$Obs_Index,
obs_fishery_comp=OM$Obs_Catch_Comp/rowSums(OM$Obs_Catch_Comp),
SS_fishery=rowSums(OM$Obs_Catch_Comp),
Mat=OM$OM$Mat,
Laa=OM$OM$Laa,
Waa=OM$OM$Waa)
#Parameters
par <- list(log_M=log(jitter(OM$OM$Mref, factor=jfactor)),
log_q=log(jitter(OM$q_index, factor=jfactor)),
log_recruit_devs_init=rep(0,dat$lage),
log_recruit_devs=rep(0,dat$lyear),
steepness=OM$OM$h,
log_R0=log(jitter(OM$OM$R0, factor=jfactor)),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=jitter(OM$OM$Sel_slope, factor=jfactor),
Sel_logis_midpt=jitter(OM$OM$Sel_50, factor=jfactor),
log_fint=log(jitter(OM$OM$F_int[26:100], factor=jfactor)))
################
#TMB stuff
################
dyn.load(dynlib("SCAA_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5, 0,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2,20,100,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SCAA_Fisch_wAge0", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u,loopnum=2, getsd=TRUE,bias.correct=TRUE,getHessian=TRUE)
}
}
SCAA_fit$SD
load("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Cod_N1000_Ind25.RData")
readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Flatfish_N1000_Ind25.RData")
x<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Flatfish_N1000_Ind25.RData")
res_list[[1]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Cod_N1000_Ind25.RData")
res_list[[2]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Flatfish_N1000_Ind25.RData")
res_list[[3]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Sardine_N1000_Ind25.RData")
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
boxplot(re[1,,], ylim=c(-0.5,0.5), las=1, main="Cod", ylab="RE - SSB")
abline(h=0)
boxplot(re[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish", ylab="RE - SSB")
abline(h=0)
boxplot(re[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine", ylab="RE - SSB")
abline(h=0)
res_list[[1]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Cod_N100_Ind25.RData")
res_list[[2]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Flatfish_N100_Ind25.RData")
res_list[[3]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Sardine_N100_Ind25.RData")
re_Dep1<-re_SSB1<-array(NA, dim=c(3,100,76))
re_R01<-re_M1<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M1[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M1[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M1[i,f]<-exp((summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
par(mfrow=c(2,3))
boxplot(re_SSB1[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB1[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB1[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N1000", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N1000", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N1000", ylab="RE - SSB")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_SSB1[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB1[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB1[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N100", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N1000", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N1000", ylab="RE - SSB")
abline(h=0)
boxplot(re_SSB[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N1000", ylab="RE - SSB")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_Dep1[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N100", ylab="RE - Depletion")
abline(h=0)
boxplot(re_Dep1[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N100", ylab="RE - Depletion")
abline(h=0)
boxplot(re_Dep1[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N100", ylab="RE - Depletion")
abline(h=0)
boxplot(re_Dep[1,,], ylim=c(-0.5,0.5), las=1, main="Cod - N1000", ylab="RE - Depletion")
abline(h=0)
boxplot(re_Dep[2,,], ylim=c(-0.5,0.5), las=1, main="Flatfish - N1000", ylab="RE - Depletion")
abline(h=0)
boxplot(re_Dep[3,,], ylim=c(-0.5,0.5), las=1, main="Sardine - N1000", ylab="RE - Depletion")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_R01[,1], ylim=c(-0.5,0.5), las=1, main="Cod - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,2], ylim=c(-0.5,0.5), las=1, main="Flatfish - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,3], ylim=c(-0.5,0.5), las=1, main="Sardine - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,1], ylim=c(-0.5,0.5), las=1, main="Cod - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.5,0.5), las=1, main="Flatfish - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.5,0.5), las=1, main="Sardine - N1000", ylab="RE - R0")
abline(h=0)
re_R01
Sardine_wdat[[10]]$OM$R0
summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),]
exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])
re_Dep1<-re_SSB1<-array(NA, dim=c(3,100,76))
re_R01<-re_M1<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M1[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M1[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
re_Dep1[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R01[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M1[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
res_list[[1]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Cod_N1000_Ind25.RData")
res_list[[2]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Flatfish_N1000_Ind25.RData")
res_list[[3]]<-readRDS("C:/Users/nicholas.fisch/Documents/GitHub/CKMR_Project/SCAAfit_Sardine_N1000_Ind25.RData")
re_Dep<-re_SSB<-array(NA, dim=c(3,100,76))
re_R0<-re_M<-matrix(NA, nrow=100, ncol=3)
for(f in 1:3){
for (i in 1:100){
if(f==1){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Cod_wdat[[i]]$OM$SSB[26:101])/Cod_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)/(Cod_wdat[[i]]$OM$SSB[26:101]/Cod_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Cod_wdat[[i]]$OM$R0)/Cod_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Cod_wdat[[i]]$OM$Mref)/Cod_wdat[[i]]$OM$Mref
}
}else if (f==2){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101])/Flatfish_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)/(Flatfish_wdat[[i]]$OM$SSB[26:101]/Flatfish_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Flatfish_wdat[[i]]$OM$R0)/Flatfish_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Flatfish_wdat[[i]]$OM$Mref)/Flatfish_wdat[[i]]$OM$Mref
}
} else if (f==3){
if(!is.null(res_list[[f]][[i]]$hessian)){
re_SSB[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "spbiomass"),3]-Sardine_wdat[[i]]$OM$SSB[26:101])/Sardine_wdat[[i]]$OM$SSB[26:101]
re_Dep[f,i,]<-(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "Depletion"),3]-Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)/(Sardine_wdat[[i]]$OM$SSB[26:101]/Sardine_wdat[[i]]$OM$SSB0)
re_R0[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_R0"),1])-Sardine_wdat[[i]]$OM$R0)/Sardine_wdat[[i]]$OM$R0
re_M[i,f]<-(exp(summary(res_list[[f]][[i]]$SD)[which(rownames(summary(res_list[[f]][[i]]$SD)) %in% "log_M"),1])-Sardine_wdat[[i]]$OM$Mref)/Sardine_wdat[[i]]$OM$Mref
}
}
}
}
par(mfcol=c(3,2))
boxplot(re_R01[,1], ylim=c(-0.5,0.5), las=1, main="Cod - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,2], ylim=c(-0.5,0.5), las=1, main="Flatfish - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,3], ylim=c(-0.5,0.5), las=1, main="Sardine - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,1], ylim=c(-0.5,0.5), las=1, main="Cod - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.5,0.5), las=1, main="Flatfish - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.5,0.5), las=1, main="Sardine - N1000", ylab="RE - R0")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_R01[,1], ylim=c(-0.25,0.25), las=1, main="Cod - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,2], ylim=c(-0.25,0.25), las=1, main="Flatfish - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R01[,3], ylim=c(-0.25,0.25), las=1, main="Sardine - N100", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,1], ylim=c(-0.25,0.25), las=1, main="Cod - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,2], ylim=c(-0.25,0.25), las=1, main="Flatfish - N1000", ylab="RE - R0")
abline(h=0)
boxplot(re_R0[,3], ylim=c(-0.25,0.25), las=1, main="Sardine - N1000", ylab="RE - R0")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_M1[,1], ylim=c(-0.25,0.25), las=1, main="Cod - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M1[,2], ylim=c(-0.25,0.25), las=1, main="Flatfish - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M1[,3], ylim=c(-0.25,0.25), las=1, main="Sardine - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M[,1], ylim=c(-0.25,0.25), las=1, main="Cod - N1000", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.25,0.25), las=1, main="Flatfish - N1000", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.25,0.25), las=1, main="Sardine - N1000", ylab="RE - M")
abline(h=0)
par(mfcol=c(3,2))
boxplot(re_M1[,1], ylim=c(-0.1,0.1), las=1, main="Cod - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M1[,2], ylim=c(-0.1,0.1), las=1, main="Flatfish - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M1[,3], ylim=c(-0.1,0.1), las=1, main="Sardine - N100", ylab="RE - M")
abline(h=0)
boxplot(re_M[,1], ylim=c(-0.1,0.1), las=1, main="Cod - N1000", ylab="RE - M")
abline(h=0)
boxplot(re_M[,2], ylim=c(-0.1,0.1), las=1, main="Flatfish - N1000", ylab="RE - M")
abline(h=0)
boxplot(re_M[,3], ylim=c(-0.1,0.1), las=1, main="Sardine - N1000", ylab="RE - M")
abline(h=0)
log(0.0001)
log(0.00001)
