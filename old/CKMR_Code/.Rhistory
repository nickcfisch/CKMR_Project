par(mfrow=c(1,4))
vioplot(M_sim[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_hsp[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_pop[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_both[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
log(0.2)
exp(log(0.2)+0.05)
exp(log(0.2)-0.05)
fage<-1
lage<-15
fyear<-1
lyear<-50
#Fishing intensity
k_int<-0.15
mid_int<-20
F_int<-0.3/(1+exp(-k_int*((fyear:lyear)-mid_int)))
#plot(F_int,ylim=c(0,0.5), las=1)
#Fishery Selectivity
k<-2
mid<-4
Sel<-1/(1+exp(-k*((fage:lage)-mid)))
Sel<-Sel/max(Sel)
#plot(Sel, las=1,type="b")
#Length and Weight, with Weight as a stand in for fecundity
Linf<-500
BK<-0.25
tnot<--0.5
Laa<-Linf*(1-exp(-BK*((fage:lage)-tnot)))
#plot(Laa, las=1, type="b")
M<-0.2
#Maa<-M*(Laa/Linf)^-1
Waa<-0.001*Laa^2.9 / 1000
#plot(Waa, las=1, type="b")
#Maturity
Mat<-c(0,0,0.5,1,1,1,1,1,1,1,1,1,1,1,1)
#Unfished Calcs
R0<-1e6
h<-0.8
lxo<-c(1,cumprod(exp(-rep(M,lage-1))))   #survivorship
lxo[lage]<-lxo[lage]/(1-exp(-M))   #plus group survivorship
#lxo<-c(1,cumprod(exp(-Maa[1:(lage-1)])))   #survivorship
#lxo[lage]<-lxo[lage]/(1-exp(-Maa[lage]))   #plus group survivorship
N0aa<-R0*lxo
SSB0<-sum(N0aa*Mat*Waa)  #Unfished SSB calc
#Population Simulation
Faa<-matrix(NA, nrow=lyear, ncol=lage)
Naa<-matrix(NA, nrow=lyear+1, ncol=lage)
Naa[1,]<-N0aa
SSB<-sum(Naa[1,]*Mat*Waa)
for(i in fyear:lyear){
Naa[i+1,1] <- (4*h*R0*SSB[i])/(SSB0*(1-h)+SSB[i]*(5*h-1))
Faa[i,]<-F_int[i]*Sel
for(j in fage:(lage-1)){
Naa[i+1,j+1]<-Naa[i,j]*exp(-(M+Faa[i,j]))
#   Naa[i+1,j+1]<-Naa[i,j]*exp(-(Maa[j]+Faa[i,j]))
}
Naa[i+1,lage]<-Naa[i+1,lage]+Naa[i,lage]*exp(-(M+Faa[i,lage])) #plus group
#  Naa[i+1,lage]<-Naa[i+1,lage]+Naa[i,lage]*exp(-(Maa[lage]+Faa[i,lage])) #plus group
SSB[i+1] <- sum(Naa[i+1,]*Mat*Waa)
}
Caa<-Faa/(M+Faa)*Naa[fyear:lyear,]*(1-exp(-(M+Faa)))
library(TMB)
setwd("C:/Users/nfisch/Documents/CKMR Workshop/Nick_Example")
#Compile and load model
compile("SimpleSCAA_Fisch.cpp")
Dat_harv<-Dat_index<-NA
Dat_comp<-matrix(NA, nrow=nrow(Caa), ncol=ncol(Caa))
for (i in 1:nrow(Caa)){
Dat_harv[i]<-rnorm(n=1, mean=sum(Caa[i,]*Waa), sd=0.05*sum(Caa[i,]*Waa))
Dat_comp[i,]<-rmultinom(n=1, size=N_comp, prob=Caa[i,])
#Pretend the index is at the start of the year (i.e. no Nbar)
Dat_index[i]<-rnorm(1, mean=q*sum(Naa[i,]*Waa*Sel), sd=0.25*q*sum(Naa[i,]*Waa*Sel))
}
N_comp<-100
q<-exp(-15)
Dat_harv<-Dat_index<-NA
Dat_comp<-matrix(NA, nrow=nrow(Caa), ncol=ncol(Caa))
for (i in 1:nrow(Caa)){
Dat_harv[i]<-rnorm(n=1, mean=sum(Caa[i,]*Waa), sd=0.05*sum(Caa[i,]*Waa))
Dat_comp[i,]<-rmultinom(n=1, size=N_comp, prob=Caa[i,])
#Pretend the index is at the start of the year (i.e. no Nbar)
Dat_index[i]<-rnorm(1, mean=q*sum(Naa[i,]*Waa*Sel), sd=0.25*q*sum(Naa[i,]*Waa*Sel))
}
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Dat_harv,
obs_index=Dat_index,
obs_fishery_comp=Dat_comp/rowSums(Dat_comp),
SS_fishery=rowSums(Dat_comp),
Mat=Mat,
Wtage=Waa)
#Parameters
par <- list(log_M=jitter(log(0.2), factor=jfactor),
log_q=jitter(-15, factor=jfactor),
log_recruit_devs=rep(0,dat$lyear),
steepness=0.8,
log_R0=jitter(log(1e6), factor=jfactor),
log_sigma_rec=log(0.3),
log_cv_fishery=log(0.05),
log_cv_index=log(0.25),
Sel_logis_k=jitter(2, factor=jfactor),
Sel_logis_midpt=jitter(4, factor=jfactor),
log_fint=jitter(rep(log(0.2),dat$lyear), factor=jfactor))
################
#TMB stuff
################
dyn.load(dynlib("SimpleSCAA_Fisch"))
parm_names<-names(MakeADFun(dat, par, DLL="SimpleSCAA_Fisch")$par)
fixed<-list(steepness=factor(NA),
log_sigma_rec=factor(NA),
log_recruit_devs=rep(factor(NA),dat$lyear),
log_cv_fishery=factor(NA),
log_cv_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lyear), 0, 5, -5,-5,-5,-2,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 20,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA$report()$pred_caa
SCAA$report()$pred_caa-Caa
par <- list(log_M=log(0.2),
log_q=-15,
log_recruit_devs=rep(0,dat$lyear),
steepness=0.8,
log_R0=log(1e6),
log_sigma_rec=log(0.3),
log_cv_fishery=log(0.05),
log_cv_index=log(0.25),
Sel_logis_k=2,
Sel_logis_midpt=4,
log_fint=log(F_int))
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA$report()$pred_caa-Caa
SCAA$report()$pred_caa[25,]
Caa[25,]
sum(SCAA$report()$pred_caa-Caa)
SCAA$report()$pred_caa[50,]
Caa[50,]
SSB
SCAA$report()$spbiomass
dnorm(Dat_harv,rowSums(t(t(Caa)*Waa)), 0.05)
dnorm(Dat_harv,rowSums(t(t(Caa)*Waa)), 0.05*rowSums(t(t(Caa)*Waa)), log=TRUE)
dnorm(Dat_harv,rowSums(t(t(Caa)*Waa)), 0.05*rowSums(t(t(Caa)*Waa)), log=TRUE)
-1*sum(dnorm(x=Dat_harv,mean=rowSums(t(t(Caa)*Waa)), sd=0.05*rowSums(t(t(Caa)*Waa)), log=TRUE))
SCAA$report()$L1
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
dyn.load(dynlib("SimpleSCAA_Fisch"))
parm_names<-names(MakeADFun(dat, par, DLL="SimpleSCAA_Fisch")$par)
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
-1*sum(dnorm(x=Dat_harv,mean=rowSums(t(t(Caa)*Waa)), sd=0.05*rowSums(t(t(Caa)*Waa)), log=TRUE))
SCAA$report()$L1
dmultinom(x=dat$obs_fishery_comp[1,], size=dat$SS_fishery[1],prob=Caa[1,])
dmultinom(x=dat$obs_fishery_comp[1,]*dat$SS_fishery[1], size=dat$SS_fishery[1],prob=Caa[1,])
dmultinom(x=dat$obs_fishery_comp[1,]*dat$SS_fishery[1],prob=Caa[1,], log=TRUE)
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
dat$obs_fishery_comp[1,]*dat$SS_fishery[1]
compile("SimpleSCAA_Fisch.cpp")
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Dat_harv,
obs_index=Dat_index,
obs_fishery_comp=Dat_comp,
SS_fishery=rowSums(Dat_comp),
Mat=Mat,
Wtage=Waa)
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
compile("SimpleSCAA_Fisch.cpp")
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
dyn.load(dynlib("SimpleSCAA_Fisch"))
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA$report()$L2
for(i in 1:50){L2[i]<-dmultinom(x=dat$obs_fishery_comp[i,], prob=Caa[i,], log=TRUE)}
L2<-NA
for(i in 1:50){L2[i]<-dmultinom(x=dat$obs_fishery_comp[i,], prob=Caa[i,], log=TRUE)}
-1*sum(L2)
compile("SimpleSCAA_Fisch.cpp")
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Dat_harv,
obs_index=Dat_index,
obs_fishery_comp=Dat_comp/rowSums(Dat_comp),
SS_fishery=rowSums(Dat_comp),
Mat=Mat,
Wtage=Waa)
dyn.load(dynlib("SimpleSCAA_Fisch"))
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA$report()$L2
par(mfrow=c(1,4))
vioplot(M_sim[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_hsp[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_pop[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
vioplot(M_sim_ckmr_both[,2], ylim=c(min(M_sim[,2]),max(M_sim[,2])))
par(mfrow=c(1,4))
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
abline(h=log(0.2))
vioplot(M_sim_ckmr_hsp[,1], ylim=c(-1.7,-1.54))
abline(h=log(0.2))
vioplot(M_sim_ckmr_pop[,1], ylim=c(-1.7,-1.54))
abline(h=log(0.2))
vioplot(M_sim_ckmr_both[,1], ylim=c(-1.7,-1.54))
abline(h=log(0.2))
log(0.25)
N_sim<-100
Naa_sim<-Naa_sim_ckmr_hsp<-Naa_sim_ckmr_pop<-Naa_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_sim<-SB_sim_ckmr_hsp<-SB_sim_ckmr_pop<-SB_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_SE_sim<-SB_SE_sim_ckmr_hsp<-SB_SE_sim_ckmr_pop<-SB_SE_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
M_sim<-M_sim_ckmr_hsp<-M_sim_ckmr_pop<-M_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=2)
jfactor<-10
Data_qual<-"Good"  #c("Good", "Medium", "Bad")
for (s in 1:N_sim){
if(Data_qual=="Good"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_25
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_100
} else if (Data_qual=="Medium"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_50
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_50
}else if(Data_qual=="Bad"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_75
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_25
}
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Orig_dat_list_wrecdev[[s]]$Dat_harv,
obs_index=ind_dat,
#            obs_fishery_comp=comp_dat/rowSums(comp_dat),
obs_fishery_comp=comp_dat,
SS_fishery=rowSums(comp_dat),
Mat=Mat,
Wtage=Waa)
#Parameters
par <- list(log_M=jitter(log(0.2), factor=jfactor),
log_q=jitter(-15, factor=jfactor),
log_recruit_devs=rep(0,dat$lyear),
steepness=0.8,
log_R0=jitter(log(1e6), factor=jfactor),
log_sigma_rec=log(0.7),
log_cv_fishery=log(0.05),
log_cv_index=log(0.25),
Sel_logis_k=jitter(2, factor=jfactor),
Sel_logis_midpt=jitter(4, factor=jfactor),
log_fint=jitter(rep(log(0.2),dat$lyear), factor=jfactor))
################
#TMB stuff
################
dyn.load(dynlib("SimpleSCAA_Fisch"))
parm_names<-names(MakeADFun(dat, par, DLL="SimpleSCAA_Fisch")$par)
fixed<-list(steepness=factor(NA),
log_cv_fishery=factor(NA),
log_cv_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lyear), 0, 5, -5,-5,-5,-2,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 20,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps=1, getsd=TRUE,getHessian=TRUE)
Naa_sim[s,]<-rowSums(SCAA$report()$N)
M_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("log_M")),]
SB_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),1]
SB_SE_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),2]
}
compile("SimpleSCAA_Fisch.cpp")
N_sim<-100
Naa_sim<-Naa_sim_ckmr_hsp<-Naa_sim_ckmr_pop<-Naa_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_sim<-SB_sim_ckmr_hsp<-SB_sim_ckmr_pop<-SB_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_SE_sim<-SB_SE_sim_ckmr_hsp<-SB_SE_sim_ckmr_pop<-SB_SE_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
M_sim<-M_sim_ckmr_hsp<-M_sim_ckmr_pop<-M_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=2)
jfactor<-10
Data_qual<-"Good"  #c("Good", "Medium", "Bad")
for (s in 1:N_sim){
if(Data_qual=="Good"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_25
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_100
} else if (Data_qual=="Medium"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_50
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_50
}else if(Data_qual=="Bad"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_75
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_25
}
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Orig_dat_list_wrecdev[[s]]$Dat_harv,
obs_index=ind_dat,
#            obs_fishery_comp=comp_dat/rowSums(comp_dat),
obs_fishery_comp=comp_dat,
SS_fishery=rowSums(comp_dat),
Mat=Mat,
Wtage=Waa)
#Parameters
par <- list(log_M=jitter(log(0.2), factor=jfactor),
log_q=jitter(-15, factor=jfactor),
log_recruit_devs=rep(0,dat$lyear),
steepness=0.8,
log_R0=jitter(log(1e6), factor=jfactor),
log_sigma_rec=log(0.7),
log_cv_fishery=log(0.05),
log_cv_index=log(0.25),
Sel_logis_k=jitter(2, factor=jfactor),
Sel_logis_midpt=jitter(4, factor=jfactor),
log_fint=jitter(rep(log(0.2),dat$lyear), factor=jfactor))
################
#TMB stuff
################
dyn.load(dynlib("SimpleSCAA_Fisch"))
parm_names<-names(MakeADFun(dat, par, DLL="SimpleSCAA_Fisch")$par)
fixed<-list(steepness=factor(NA),
log_cv_fishery=factor(NA),
log_cv_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lyear), 0, 5, -5,-5,-5,-2,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 20,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps=1, getsd=TRUE,getHessian=TRUE)
Naa_sim[s,]<-rowSums(SCAA$report()$N)
M_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("log_M")),]
SB_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),1]
SB_SE_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),2]
}
for (s in 1:100){
RE_N[s,]<-(Naa_sim[s,]-rowSums(OM_list_wrecdev[[s]]$Naa))/rowSums(OM_list_wrecdev[[s]]$Naa)
}
vioplot(RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
abline(h=0)
load("Data/700/Results_Good_Data_700.RData")
vioplot(RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
vioplot(Results_Bad_Data$RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
abline(h=0)
vioplot(RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
vioplot(RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
abline(h=0)
vioplot(Results_Good_Data$RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
abline(h=0)
vioplot(Results_Bad_Data$RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
abline(h=0)
vioplot(RE_N, col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
vioplot(M_sim[,1], col="white",ylim=c(-0.7,0.7), range=0,colMed="black", pchMed=20, cex=1.25, rectCol="black", border="black", las=1, lineCol="black")
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
par(mfrow=c(1,4))
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
vioplot(Results_Good_Data$M_sim[,1], ylim=c(-1.7,-1.54))
aline(h=log(0.2))
abline(h=log(0.2))
vioplot(Results_Bad_Data$M_sim[,1], ylim=c(-1.7,-1.54))
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
abline(h=mean(M_sim[,1]))
vioplot(Results_Good_Data$M_sim[,1], ylim=c(-1.7,-1.54))
abline(h=mean(Results_Good_Data$M_sim[,1]))
abline(h=median(Results_Good_Data$M_sim[,1]))
abline(h=log(0.2), col=2)
OM_list_wrecdev_700[[1]]
load("Data/OM_list_wrecdev_700.RData")
load("Data/700/OM_list_wrecdev_700.RData")
OM_list_wrecdev_700[[1]]
OM_list_wrecdev[[1]]
N_sim<-100
Naa_sim<-Naa_sim_ckmr_hsp<-Naa_sim_ckmr_pop<-Naa_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_sim<-SB_sim_ckmr_hsp<-SB_sim_ckmr_pop<-SB_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
SB_SE_sim<-SB_SE_sim_ckmr_hsp<-SB_SE_sim_ckmr_pop<-SB_SE_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=51)
M_sim<-M_sim_ckmr_hsp<-M_sim_ckmr_pop<-M_sim_ckmr_both<-matrix(NA,nrow=N_sim,ncol=2)
jfactor<-10
Data_qual<-"Good"  #c("Good", "Medium", "Bad")
for (s in 1:N_sim){
if(Data_qual=="Good"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_25
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_100
} else if (Data_qual=="Medium"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_50
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_50
}else if(Data_qual=="Bad"){
ind_dat<-Orig_dat_list_wrecdev[[s]]$Dat_index_75
comp_dat<-Orig_dat_list_wrecdev[[s]]$Dat_comp_25
}
for(i in 1:50){
comp_dat[i,]<-rmultinom(n=1, size=10000, prob=(OM_list_wrecdev[[s]]$Faa/(OM_list_wrecdev[[s]]$Faa+0.2)*OM_list_wrecdev[[s]]$Naa[1:50,]*(1-exp(-(OM_list_wrecdev[[s]]$Faa+0.2))))[i,] )
}
dat<-list(fyear=fyear, lyear=lyear, fage=fage, lage=lage, years=fyear:lyear, ages=fage:lage,
obs_harv=Orig_dat_list_wrecdev[[s]]$Dat_harv,
obs_index=ind_dat,
#            obs_fishery_comp=comp_dat/rowSums(comp_dat),
obs_fishery_comp=comp_dat,
SS_fishery=rowSums(comp_dat),
Mat=Mat,
Wtage=Waa)
#Parameters
par <- list(log_M=jitter(log(0.2), factor=jfactor),
log_q=jitter(-15, factor=jfactor),
log_recruit_devs=rep(0,dat$lyear),
steepness=0.8,
log_R0=jitter(log(1e6), factor=jfactor),
log_sigma_rec=log(0.7),
log_cv_fishery=log(0.05),
log_cv_index=log(0.25),
Sel_logis_k=jitter(2, factor=jfactor),
Sel_logis_midpt=jitter(4, factor=jfactor),
log_fint=jitter(rep(log(0.2),dat$lyear), factor=jfactor))
################
#TMB stuff
################
dyn.load(dynlib("SimpleSCAA_Fisch"))
parm_names<-names(MakeADFun(dat, par, DLL="SimpleSCAA_Fisch")$par)
fixed<-list(steepness=factor(NA),
log_cv_fishery=factor(NA),
log_cv_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lyear), 0, 5, -5,-5,-5,-2,  0,rep(-20,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 20,rep(  0,dat$lyear))
reffects=c("log_recruit_devs")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="SimpleSCAA_Fisch", map=fixed, random=reffects)
SCAA_fit <- TMBhelper::fit_tmb(obj=SCAA, startpar=SCAA$par, lower=l, upper=u, newtonsteps=1, getsd=TRUE,getHessian=TRUE)
Naa_sim[s,]<-rowSums(SCAA$report()$N)
M_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("log_M")),]
SB_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),1]
SB_SE_sim[s,]<-summary(SCAA_fit$SD)[which(row.names(summary(SCAA_fit$SD)) %in%  c("spbiomass")),2]
}
RE_ckmr_hsp_N<-RE_ckmr_pop_N<-RE_ckmr_both_N<-RE_N<-matrix(NA, nrow=100,ncol=51)
for (s in 1:100){
}
vioplot(M_sim[,1], ylim=c(-1.7,-1.54))
abline(h=log(0.2))
log(0.2)
mean(M_sim[,1])
Gradient_DML<-Gradient_LN<-list()
for(l in 1:7){
Gradient_DML[[l]]<-Gradient_LN[[l]]<-matrix(nrow=100, ncol=length(names_DML[[1]]))
for (i in seq(1,length(names_DML[[l]]))){
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_DML[[l]][i/2+0.5],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
#     if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_LN[[l]][i/2+0.5],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
#      if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
}
}
Gradient_DML[[1]]
hist(Gradient_DML[[1]][,1])
diagnostics
names_DML[[l]]
seq(1,length(names_DML[[l]])
)
seq(1,length(names_DML[[l]]))/2+0.5
Gradient_DML<-Gradient_LN<-list()
for(l in 1:7){
Gradient_DML[[l]]<-Gradient_LN[[l]]<-matrix(nrow=100, ncol=length(names_DML[[1]]))
for (i in seq(1,length(names_DML[[l]]))){
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_DML[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
#     if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_LN[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
#      if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
}
}
seq(1,length(names_DML[[l]])*2,2)
seq(1,length(names_DML[[l]])*2,2)/2+0.5
Gradient_DML<-Gradient_LN<-list()
for(l in 1:7){
Gradient_DML[[l]]<-Gradient_LN[[l]]<-matrix(nrow=100, ncol=length(names_DML[[1]]))
for (i in seq(1,length(names_DML[[l]]))){
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_DML[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
#      if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_LN[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
#      if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
}
}
windows()
vioplot(Gradient_DML[[1]], ylim=c(-1,50))
vioplot(Gradient_DML[[2]], ylim=c(-1,50))
vioplot(Gradient_DML[[3]], ylim=c(-1,50))
vioplot(Gradient_DML[[4]], ylim=c(-1,50))
vioplot(Gradient_DML[[5]], ylim=c(-1,50))
vioplot(Gradient_DML[[6]], ylim=c(-1,50))
vioplot(Gradient_DML[[7]], ylim=c(-1,50))
Gradient_DML<-Gradient_LN<-whichPar_Gradient_DML<-whichPar_Gradient_LN<-list()
for(l in 1:7){
Gradient_DML[[l]]<-Gradient_LN[[l]]<-matrix(nrow=100, ncol=length(names_DML[[1]]))
whichPar_Gradient_DML[[l]]<-whichPar_Gradient_LN[[l]]<-matrix(nrow=100, ncol=length(names_DML[[1]]))
for (i in seq(1,length(names_DML[[l]]))){
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_DML[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
if(!is.null(diagnostics[[t]])){Gradient_DML[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){whichPar_Gradient_DML[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
load(paste0("C:/Users/nfisch/Documents/Chapter_4/Results/",names_LN[[l]][i],"/diagnostics.RData"))
for(t in 1:length(diagnostics)){
if(!is.null(diagnostics[[t]])){Gradient_LN[[l]][t,i]<-max(diagnostics[[t]]$final_gradient)}
if(!is.null(diagnostics[[t]])){whichPar_Gradient_LN[[l]][t,i]<-which.max(diagnostics[[t]]$final_gradient)}
}
}
}
hist(whichPar_Gradient_DML[[1]][,1])
hist(whichPar_Gradient_LN[[1]][,1])
whichPar_Gradient_LN[[1]][,1]
