((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:2){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > -1){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:2){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > -1){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:2){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > -1){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:2){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > -1){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$HSP_prob[q]
SCAA$report()$HSP_prob[q]
SCAA$report()$HSP_prob[q]
SCAA$report()$HSP_prob[q]
SCAA$report()$HSP_prob[q]
compile("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0.cpp")
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$POP_prob[q]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
y<-0
q<-1
for(i in 0:15){
if((dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[1]) > 0){ #if we're not in plus group, and age of grandparent at year of parents birth must be positive
y <- y + SCAA$report()$N[dat$born_year_young[q],i+1] *  (dat$Mat[i+1]*dat$Waa[i+1])/SCAA$report()$spbiomass[dat$born_year_young[q]] *
((dat$Mat[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1] *
dat$Waa[(dat$born_year_young[q]-i)-(dat$born_year_young[q]-dat$age_diff[q])+1]) /
(0.5*SCAA$report()$spbiomass[dat$born_year_young[q]-i]))
}}
y
SCAA$report()$GGP_prob[q]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
SCAA$env$last.par.best
length(SCAA$env$last.par.best)
length(SCAA$par)
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
y
SCAA$gr()
SCAA$gr()
SCAA$gr()
SCAA$gr()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$fn()
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
y
SCAA$report()$GGP_prob[q]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed),reffects))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed),reffects))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed, random=reffects)
SCAA$report()$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$env$last.par.best
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
par <- list(log_M=log(OM$OM$Mref),
log_q=log(OM$q_index),
log_recruit_devs_init=OM$OM$lrecdevs[11:25],
log_recruit_devs=OM$OM$lrecdevs[26:100],
steepness=OM$OM$h,
log_R0=log(OM$OM$R0),
log_sigma_rec=log(OM$OM$sd_rec),
log_sd_catch=log(OM$sd_catch),
log_sd_index=log(OM$sd_index),
Sel_logis_k=log(OM$OM$Sel_slope),
Sel_logis_midpt=log(OM$OM$Sel_50),
log_fint=log(OM$OM$F_int[26:100]))
dyn.load(dynlib("CKMRmultinom_HSP_POP_GPP_Fisch_wAge0"))
parm_names<-names(MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0")$par)
fixed<-list(steepness=factor(NA),
log_sd_catch=factor(NA),
log_sd_index=factor(NA))
lower_bounds<-c(-5,-20,rep(-10,dat$lage),rep(-10,dat$lyear), 0, 5, -5,-5,-5,-5,-5,rep(-10,dat$lyear))
upper_bounds<-c( 2,  1,rep( 10,dat$lage),rep( 10,dat$lyear), 1, 25, 2, 2, 2, 5, 5,rep(  0,dat$lyear))
reffects=c("log_recruit_devs","log_recruit_devs_init")
l<-lower_bounds[-which(parm_names %in% c(names(fixed)))]
u<-upper_bounds[-which(parm_names %in% c(names(fixed)))]
SCAA <- MakeADFun(dat, par, DLL="CKMRmultinom_HSP_POP_GPP_Fisch_wAge0", map=fixed)
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report()$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$env$last.par.best)$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
SCAA$report(SCAA$par)$GGP_prob[1]
